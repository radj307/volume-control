<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_hotkey_lib_1_1_key_combo" kind="struct" language="C#" prot="public">
    <compoundname>HotkeyLib::KeyCombo</compoundname>
    <basecompoundref refid="interface_hotkey_lib_1_1_i_key_combo" prot="public" virt="non-virtual">HotkeyLib.IKeyCombo</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_hotkey_lib_1_1_key_combo_1a8dd5c0e2ba3e9ec9d5f508c2417f3e58" prot="private" static="no" mutable="no">
        <type>Keys</type>
        <definition>Keys HotkeyLib.KeyCombo._key</definition>
        <argsstring></argsstring>
        <name>_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" line="60" column="22" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hotkey_lib_1_1_key_combo_1a268a0542c76beb7c05c004e8b0e62c30" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_hotkey_lib_1a0ee197083bcd7c48bc94a25ec4eb78e4" kindref="member">Modifier</ref></type>
        <definition>Modifier HotkeyLib.KeyCombo._mod</definition>
        <argsstring></argsstring>
        <name>_mod</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" line="61" column="26" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="event">
      <memberdef kind="event" id="struct_hotkey_lib_1_1_key_combo_1ae56a67dffd2f09ac411dc1d9d2863c2e" prot="public" static="no" add="no" remove="no" raise="no">
        <type>PropertyChangedEventHandler?</type>
        <definition>PropertyChangedEventHandler? HotkeyLib.KeyCombo.PropertyChanged</definition>
        <argsstring></argsstring>
        <name>PropertyChanged</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" line="63" column="50" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="struct_hotkey_lib_1_1_key_combo_1a87d270ee53e020c6b88fe2face14ab94" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>Keys</type>
        <definition>Keys HotkeyLib.KeyCombo.Key</definition>
        <argsstring></argsstring>
        <name>Key</name>
        <briefdescription>
<para>The primary key on the Keyboard. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" line="70" column="21" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" bodystart="71" bodyend="79"/>
      </memberdef>
      <memberdef kind="property" id="struct_hotkey_lib_1_1_key_combo_1a459e20d368bde8f0d8cef2ff59470539" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="namespace_hotkey_lib_1a0ee197083bcd7c48bc94a25ec4eb78e4" kindref="member">Modifier</ref></type>
        <definition>Modifier HotkeyLib.KeyCombo.Mod</definition>
        <argsstring></argsstring>
        <name>Mod</name>
        <briefdescription>
<para>The modifier key bitfield. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" line="83" column="25" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" bodystart="84" bodyend="91"/>
      </memberdef>
      <memberdef kind="property" id="struct_hotkey_lib_1_1_key_combo_1ae0eb6f57064d56aad32c84a0c6a75762" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool HotkeyLib.KeyCombo.Alt</definition>
        <argsstring></argsstring>
        <name>Alt</name>
        <briefdescription>
<para>Get or set whether the Alt modifier key is enabled. This corresponds to the first bit in the modifier key bitfield. Both the left and right modifier keys apply here, there is no method available to limit the key combination to only the left or right modifier key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" line="97" column="21" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" bodystart="98" bodyend="105"/>
      </memberdef>
      <memberdef kind="property" id="struct_hotkey_lib_1_1_key_combo_1abad2e0a162736a5d0243d3727fba8570" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool HotkeyLib.KeyCombo.Ctrl</definition>
        <argsstring></argsstring>
        <name>Ctrl</name>
        <briefdescription>
<para>Get or set whether the Ctrl modifier key is enabled. This corresponds to the second bit in the modifier key bitfield. Both the left and right modifier keys apply here, there is no method available to limit the key combination to only the left or right modifier key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" line="111" column="21" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" bodystart="112" bodyend="119"/>
      </memberdef>
      <memberdef kind="property" id="struct_hotkey_lib_1_1_key_combo_1a2f9526410b6f6868aa6d73e88aa5e962" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool HotkeyLib.KeyCombo.Shift</definition>
        <argsstring></argsstring>
        <name>Shift</name>
        <briefdescription>
<para>Get or set whether the Shift modifier key is enabled. This corresponds to the third bit in the modifier key bitfield. Both the left and right modifier keys apply here, there is no method available to limit the key combination to only the left or right modifier key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" line="125" column="21" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" bodystart="126" bodyend="133"/>
      </memberdef>
      <memberdef kind="property" id="struct_hotkey_lib_1_1_key_combo_1afa2427ccd9cf66cc06eeb550fcbd9fb3" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool HotkeyLib.KeyCombo.Win</definition>
        <argsstring></argsstring>
        <name>Win</name>
        <briefdescription>
<para>Get or set whether the &quot;Windows Key&quot; (super) modifier key is enabled. This corresponds to the fourth bit in the modifier key bitfield. Both the left and right modifier keys apply here, there is no method available to limit the key combination to only the left or right modifier key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" line="139" column="21" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" bodystart="140" bodyend="147"/>
      </memberdef>
      <memberdef kind="property" id="struct_hotkey_lib_1_1_key_combo_1a319dfd310aa2d8f51cb2fe7fd53e1fe4" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool HotkeyLib.KeyCombo.Valid</definition>
        <argsstring></argsstring>
        <name>Valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" line="149" column="21" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" bodystart="149" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_hotkey_lib_1_1_key_combo_1ac6a77c23ea6d3a58bc23fe039203fd3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HotkeyLib.KeyCombo.KeyCombo</definition>
        <argsstring>(string keystr)</argsstring>
        <name>KeyCombo</name>
        <param>
          <type>string</type>
          <declname>keystr</declname>
        </param>
        <briefdescription>
<para>String Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keystr</parametername>
</parameternamelist>
<parameterdescription>
<para>A string in the format &quot;&lt;KEY&gt;[+&lt;MOD&gt;...]&quot;</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" line="17" column="16" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" bodystart="17" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="struct_hotkey_lib_1_1_key_combo_1a12d8120bfcd3ee07dbebfcb3fba5ec03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HotkeyLib.KeyCombo.KeyCombo</definition>
        <argsstring>(Keys key, Modifier mods)</argsstring>
        <name>KeyCombo</name>
        <param>
          <type>Keys</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="namespace_hotkey_lib_1a0ee197083bcd7c48bc94a25ec4eb78e4" kindref="member">Modifier</ref></type>
          <declname>mods</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>A Non-Modifier Keyboard Key.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mods</parametername>
</parameternamelist>
<parameterdescription>
<para>A bitfield where the first 4 bits represent the various modifier keys.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" line="45" column="16" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" bodystart="45" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="struct_hotkey_lib_1_1_key_combo_1ae0d8d5ab747351d8bf00c7075a3fcb5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HotkeyLib.KeyCombo.KeyCombo</definition>
        <argsstring>()</argsstring>
        <name>KeyCombo</name>
        <briefdescription>
<para>Default Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Key = Keys.None; Modifier = <ref refid="namespace_hotkey_lib_1a0ee197083bcd7c48bc94a25ec4eb78e4ab50339a10e1de285ac99d4c3990b8693" kindref="member">Modifier.NONE</ref>;</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" line="56" column="16" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" bodystart="56" bodyend="56"/>
        <references refid="namespace_hotkey_lib_1a0ee197083bcd7c48bc94a25ec4eb78e4ab50339a10e1de285ac99d4c3990b8693">HotkeyLib.NONE</references>
      </memberdef>
      <memberdef kind="function" id="struct_hotkey_lib_1_1_key_combo_1a8daf42735f2789b05da8beb15eed93e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>override? string</type>
        <definition>override? string HotkeyLib.KeyCombo.ToString</definition>
        <argsstring>()</argsstring>
        <name>ToString</name>
        <reimplements refid="interface_hotkey_lib_1_1_i_key_combo_1a8973de0486c6aff4bea544a29a941bac">ToString</reimplements>
        <briefdescription>
<para>Converts this key combination into a readable/writable string, formatted as &quot;&lt;KEY&gt;[+&lt;MOD&gt;...]&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A valid hotkey string representation.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" line="158" column="32"/>
      </memberdef>
      <memberdef kind="function" id="struct_hotkey_lib_1_1_key_combo_1ae81e583c494904f15c03879975f75c1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string HotkeyLib.KeyCombo.Serialize</definition>
        <argsstring>()</argsstring>
        <name>Serialize</name>
        <reimplements refid="interface_hotkey_lib_1_1_i_key_combo_1af550de1abed16c86508cec73769ae3a5">Serialize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" line="159" column="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="struct_hotkey_lib_1_1_key_combo_1afbd85c95ffc292a2ecbd751637f3a18b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HotkeyLib.KeyCombo.NotifyPropertyChanged</definition>
        <argsstring>([CallerMemberName] string propertyName=&quot;&quot;)</argsstring>
        <name>NotifyPropertyChanged</name>
        <param>
          <attributes>[CallerMemberName]</attributes>
          <type>string</type>
          <declname>propertyName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" line="153" column="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_hotkey_lib_1_1_key_combo_1a1b9e4caa671533619b3b058358f36df7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_hotkey_lib_1_1_key_combo" kindref="compound">KeyCombo</ref></type>
        <definition>static KeyCombo HotkeyLib.KeyCombo.Parse</definition>
        <argsstring>(string keystr, StringComparison sCompareType=StringComparison.OrdinalIgnoreCase)</argsstring>
        <name>Parse</name>
        <param>
          <type>string</type>
          <declname>keystr</declname>
        </param>
        <param>
          <type>StringComparison</type>
          <declname>sCompareType</declname>
          <defval>StringComparison.OrdinalIgnoreCase</defval>
        </param>
        <briefdescription>
<para>Parse the given string into a <ref refid="struct_hotkey_lib_1_1_key_combo" kindref="compound">KeyCombo</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keystr</parametername>
</parameternamelist>
<parameterdescription>
<para>Input String</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sCompareType</parametername>
</parameternamelist>
<parameterdescription>
<para>String Comparison Type</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_hotkey_lib_1_1_key_combo" kindref="compound">KeyCombo</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" line="167" column="32" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" bodystart="167" bodyend="187"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a combination of one keyboard key and any number of modifier keys. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>INotifyPropertyChanged</label>
      </node>
      <node id="1">
        <label>HotkeyLib.KeyCombo</label>
        <link refid="struct_hotkey_lib_1_1_key_combo"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>IKeyCombo</label>
        <link refid="interface_hotkey_lib_1_1_i_key_combo"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>INotifyPropertyChanged</label>
      </node>
      <node id="1">
        <label>HotkeyLib.KeyCombo</label>
        <link refid="struct_hotkey_lib_1_1_key_combo"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>IKeyCombo</label>
        <link refid="interface_hotkey_lib_1_1_i_key_combo"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" line="10" column="11" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/KeyCombo.cs" bodystart="11" bodyend="189"/>
    <listofallmembers>
      <member refid="struct_hotkey_lib_1_1_key_combo_1a8dd5c0e2ba3e9ec9d5f508c2417f3e58" prot="private" virt="non-virtual"><scope>HotkeyLib::KeyCombo</scope><name>_key</name></member>
      <member refid="struct_hotkey_lib_1_1_key_combo_1a268a0542c76beb7c05c004e8b0e62c30" prot="private" virt="non-virtual"><scope>HotkeyLib::KeyCombo</scope><name>_mod</name></member>
      <member refid="struct_hotkey_lib_1_1_key_combo_1ae0eb6f57064d56aad32c84a0c6a75762" prot="public" virt="non-virtual"><scope>HotkeyLib::KeyCombo</scope><name>Alt</name></member>
      <member refid="struct_hotkey_lib_1_1_key_combo_1abad2e0a162736a5d0243d3727fba8570" prot="public" virt="non-virtual"><scope>HotkeyLib::KeyCombo</scope><name>Ctrl</name></member>
      <member refid="struct_hotkey_lib_1_1_key_combo_1a87d270ee53e020c6b88fe2face14ab94" prot="public" virt="non-virtual"><scope>HotkeyLib::KeyCombo</scope><name>Key</name></member>
      <member refid="struct_hotkey_lib_1_1_key_combo_1ac6a77c23ea6d3a58bc23fe039203fd3a" prot="public" virt="non-virtual"><scope>HotkeyLib::KeyCombo</scope><name>KeyCombo</name></member>
      <member refid="struct_hotkey_lib_1_1_key_combo_1a12d8120bfcd3ee07dbebfcb3fba5ec03" prot="public" virt="non-virtual"><scope>HotkeyLib::KeyCombo</scope><name>KeyCombo</name></member>
      <member refid="struct_hotkey_lib_1_1_key_combo_1ae0d8d5ab747351d8bf00c7075a3fcb5f" prot="public" virt="non-virtual"><scope>HotkeyLib::KeyCombo</scope><name>KeyCombo</name></member>
      <member refid="struct_hotkey_lib_1_1_key_combo_1a459e20d368bde8f0d8cef2ff59470539" prot="public" virt="non-virtual"><scope>HotkeyLib::KeyCombo</scope><name>Mod</name></member>
      <member refid="struct_hotkey_lib_1_1_key_combo_1afbd85c95ffc292a2ecbd751637f3a18b" prot="private" virt="non-virtual"><scope>HotkeyLib::KeyCombo</scope><name>NotifyPropertyChanged</name></member>
      <member refid="struct_hotkey_lib_1_1_key_combo_1a1b9e4caa671533619b3b058358f36df7" prot="public" virt="non-virtual"><scope>HotkeyLib::KeyCombo</scope><name>Parse</name></member>
      <member refid="struct_hotkey_lib_1_1_key_combo_1ae56a67dffd2f09ac411dc1d9d2863c2e" prot="public" virt="non-virtual"><scope>HotkeyLib::KeyCombo</scope><name>PropertyChanged</name></member>
      <member refid="struct_hotkey_lib_1_1_key_combo_1ae81e583c494904f15c03879975f75c1d" prot="public" virt="non-virtual"><scope>HotkeyLib::KeyCombo</scope><name>Serialize</name></member>
      <member refid="struct_hotkey_lib_1_1_key_combo_1a2f9526410b6f6868aa6d73e88aa5e962" prot="public" virt="non-virtual"><scope>HotkeyLib::KeyCombo</scope><name>Shift</name></member>
      <member refid="struct_hotkey_lib_1_1_key_combo_1a8daf42735f2789b05da8beb15eed93e4" prot="public" virt="non-virtual"><scope>HotkeyLib::KeyCombo</scope><name>ToString</name></member>
      <member refid="struct_hotkey_lib_1_1_key_combo_1a319dfd310aa2d8f51cb2fe7fd53e1fe4" prot="public" virt="non-virtual"><scope>HotkeyLib::KeyCombo</scope><name>Valid</name></member>
      <member refid="struct_hotkey_lib_1_1_key_combo_1afa2427ccd9cf66cc06eeb550fcbd9fb3" prot="public" virt="non-virtual"><scope>HotkeyLib::KeyCombo</scope><name>Win</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
