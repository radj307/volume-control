<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_volume_control_1_1_log_1_1_log_message" kind="class" language="C#" prot="public">
    <compoundname>VolumeControl::Log::LogMessage</compoundname>
    <basecompoundref refid="class_volume_control_1_1_log_1_1_log_writer" prot="public" virt="non-virtual">VolumeControl.Log.LogWriter</basecompoundref>
    <basecompoundref refid="interface_volume_control_1_1_log_1_1_interfaces_1_1_i_log_writer" prot="public" virt="non-virtual">VolumeControl.Log.Interfaces.ILogWriter</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_volume_control_1_1_log_1_1_log_message_1a6575ca4bff9f848f0676c52c6153066c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VolumeControl.Log.LogMessage.LogMessage</definition>
        <argsstring>(EventType filter=EventType.ALL)</argsstring>
        <name>LogMessage</name>
        <param>
          <type><ref refid="namespace_volume_control_1_1_log_1_1_enum_1a3cd077137af59fc500ebf35ecfdc4327" kindref="member">EventType</ref></type>
          <declname>filter</declname>
          <defval>EventType.ALL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitfield flags that determine which types of log messages may be shown.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Log/LogMessage.cs" line="16" column="16" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Log/LogMessage.cs" bodystart="16" bodyend="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This is an entirely optional object that maintains an internal MemoryStream and emulates the <ref refid="class_volume_control_1_1_log_1_1_log_writer" kindref="compound">LogWriter</ref> object with a twist.<linebreak/>
 This object can&apos;t flush the buffer to any endpoint directly, but can be passed to a <ref refid="class_volume_control_1_1_log_1_1_log_writer" kindref="compound">LogWriter</ref> that will print the entire message in one operation. </para>
    </briefdescription>
    <detaileddescription>
<para><bold>Do not access this object asynchronously!</bold></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>VolumeControl.Log.LogMessage</label>
        <link refid="class_volume_control_1_1_log_1_1_log_message"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>LogWriter</label>
        <link refid="class_volume_control_1_1_log_1_1_log_writer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>IDisposable</label>
      </node>
      <node id="3">
        <label>ILogWriter</label>
        <link refid="interface_volume_control_1_1_log_1_1_interfaces_1_1_i_log_writer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>VolumeControl.Log.LogMessage</label>
        <link refid="class_volume_control_1_1_log_1_1_log_message"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>LogWriter</label>
        <link refid="class_volume_control_1_1_log_1_1_log_writer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>IDisposable</label>
      </node>
      <node id="3">
        <label>ILogWriter</label>
        <link refid="interface_volume_control_1_1_log_1_1_interfaces_1_1_i_log_writer"/>
      </node>
    </collaborationgraph>
    <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Log/LogMessage.cs" line="12" column="11" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Log/LogMessage.cs" bodystart="13" bodyend="22"/>
    <listofallmembers>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a84f2a4a818ded391050345b3962adc90" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>Append</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a23589efc4aa886f386e9d8645338a395" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>Conditional</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a09e652d1c8049b4b137d45dd2a6466a4" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>Debug</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1afc5a989c76d93c1ed2ab93a0e51116bc" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>DebugException</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1ad15ebefc27f412e93bb25a211100d2af" prot="protected" virt="virtual"><scope>VolumeControl::Log::LogMessage</scope><name>Dispose</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1ae5e6a321324c6111fc851f15a82e45dc" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>Dispose</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a5ef26b1bf948c848e951921e8c2a5363" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>Endpoint</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1ae7780f22869e53ce4a1aad3fc6fa0bf7" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>Error</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a75e77a8720b36ca2c89eed22cf41cfdb" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>ErrorException</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a9ccdde45c27eeb86a0be3d706c97a050" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>EventTypeFilter</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1ad9e85777693f64428ffb3997aaa82571" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>Fatal</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1addd47968ecd617ab467b61e55f72a1d7" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>FatalException</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a927e2b5b79ae2c3a0b243246bb2e5a3d" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>FilterEventType</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a71b504690e2d8f2d5a73755ff8b3ce50" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>Followup</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a21c94de59ea2f83f2c8ad36f6e6b1280" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>FollowupIf</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a358d95abb387b01732c5657a3da421d3" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>FollowupIf</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a50ad257b3de9e7d97078463bee977514" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>GetMessage</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a1a923e4492f98675dcedebc61ef0055a" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>GetTrace</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1adf2532f0598cac3dfe9a3660f4fb7362" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>Info</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1ae2133d1e8440194232ecb43e8a3dda4a" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>InfoException</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a7a8311bdb049a796df8c60540a979ae6" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>LastEventType</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_message_1a6575ca4bff9f848f0676c52c6153066c" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>LogMessage</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1aecfc7d86fb35f9bb5e0803755f0040c8" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>LogWriter</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a41f1ff6d9d62eec9077a3c608ca36b5e" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>MakeBlankTimestamp</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1ac1a570a8d00bacba3a71dd8e442cfd31" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>MakeTimestamp</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a5caf611b6e4d2cf97b6521b9b2e3f9ef" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>Warning</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a8bb1a18470c4e1146e570e48a42798fa" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>WarningException</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a06ef763c23a68f61dbd347e76098c151" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>Write</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1af9f117f9eb6d41820bc271ac0f0d4f76" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>WriteEvent</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a07d713ad2ef057e4606c04bdd6169c16" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>WriteEvent</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a10efb093dfb522f97b14188ee6a3fa5f" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>WriteEvent</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1aa45f631b6e36cd5dee9759993c36e862" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>WriteException</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1adcd0a07adf8acc7d797d10cbae69a11d" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>WriteLine</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a1945fc8f37b7d1b0b156693cd616ffb7" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>WriteMessage</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a2358be752465f43b8ac7b0d7c2aa55bf" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>WriteWithTimestamp</name></member>
      <member refid="class_volume_control_1_1_log_1_1_log_writer_1a817b4d25c9fcc86fa0b5afe28ec054b1" prot="public" virt="non-virtual"><scope>VolumeControl::Log::LogMessage</scope><name>WriteWithTimestamp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
