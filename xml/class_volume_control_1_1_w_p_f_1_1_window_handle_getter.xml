<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_volume_control_1_1_w_p_f_1_1_window_handle_getter" kind="class" language="C#" prot="public">
    <compoundname>VolumeControl::WPF::WindowHandleGetter</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_volume_control_1_1_w_p_f_1_1_window_handle_getter_1af3958c64d6b5bae2bcf558dacacba07a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IntPtr</type>
        <definition>static IntPtr VolumeControl.WPF.WindowHandleGetter.GetWindowHandle</definition>
        <argsstring>(Window wnd)</argsstring>
        <name>GetWindowHandle</name>
        <param>
          <type>Window</type>
          <declname>wnd</declname>
        </param>
        <briefdescription>
<para>Gets the primary <ref refid="namespace_volume_control_1_1_w_p_f" kindref="compound">WPF</ref> window&apos;s handle.<linebreak/>
This uses WindowInteropHelper.EnsureHandle to ensure that a valid handle is always returned at any point during initialization. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>IntPtr set to the current <ref refid="namespace_volume_control_1_1_w_p_f" kindref="compound">WPF</ref> window&apos;s handle.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.WPF/WindowHandleGetter.cs" line="17" column="30"/>
        <referencedby refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a57c8d96dc5d4178d5b6d15a5df8fa374" compoundref="_hotkey_manager_8cs" startline="191" endline="197">VolumeControl.Hotkeys.HotkeyManager.AddHook</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_volume_control_1_1_w_p_f_1_1_window_handle_getter_1a2a93ca4faed21f0aac1d791a781e396a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IntPtr</type>
        <definition>static IntPtr VolumeControl.WPF.WindowHandleGetter.GetWindowHandle</definition>
        <argsstring>()</argsstring>
        <name>GetWindowHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Without parameters, this function uses the main window&apos;s handle using the Application.MainWindow property from Application.Current.</bold></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.WPF/WindowHandleGetter.cs" line="20" column="30"/>
      </memberdef>
      <memberdef kind="function" id="class_volume_control_1_1_w_p_f_1_1_window_handle_getter_1ae1d05b0322c8ff6efcef70a2538ba1fb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HwndSource</type>
        <definition>static HwndSource VolumeControl.WPF.WindowHandleGetter.GetHwndSource</definition>
        <argsstring>(IntPtr hWnd)</argsstring>
        <name>GetHwndSource</name>
        <param>
          <type>IntPtr</type>
          <declname>hWnd</declname>
        </param>
        <briefdescription>
<para>Gets the HwndSource associated with the given Window Handle <emphasis>hWnd</emphasis> . </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hWnd</parametername>
</parameternamelist>
<parameterdescription>
<para>The IntPtr associated with a <ref refid="namespace_volume_control_1_1_w_p_f" kindref="compound">WPF</ref> window.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>HwndSource that can be used to receive <ref refid="namespace_volume_control_1_1_w_p_f" kindref="compound">WPF</ref> window messages.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.WPF/WindowHandleGetter.cs" line="26" column="34"/>
        <referencedby refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a57c8d96dc5d4178d5b6d15a5df8fa374" compoundref="_hotkey_manager_8cs" startline="191" endline="197">VolumeControl.Hotkeys.HotkeyManager.AddHook</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helper object for C# Class Libraries being unable to get the current <ref refid="namespace_volume_control_1_1_w_p_f" kindref="compound">WPF</ref> window handle. </para>
    </briefdescription>
    <detaileddescription>
<para>This can be used to receive window messages for the current window even from within non-WPF projects.</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>VolumeControl.WPF.WindowHandleGetter</label>
        <link refid="class_volume_control_1_1_w_p_f_1_1_window_handle_getter"/>
      </node>
    </collaborationgraph>
    <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.WPF/WindowHandleGetter.cs" line="11" column="19" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.WPF/WindowHandleGetter.cs" bodystart="12" bodyend="27"/>
    <listofallmembers>
      <member refid="class_volume_control_1_1_w_p_f_1_1_window_handle_getter_1ae1d05b0322c8ff6efcef70a2538ba1fb" prot="public" virt="non-virtual"><scope>VolumeControl::WPF::WindowHandleGetter</scope><name>GetHwndSource</name></member>
      <member refid="class_volume_control_1_1_w_p_f_1_1_window_handle_getter_1af3958c64d6b5bae2bcf558dacacba07a" prot="public" virt="non-virtual"><scope>VolumeControl::WPF::WindowHandleGetter</scope><name>GetWindowHandle</name></member>
      <member refid="class_volume_control_1_1_w_p_f_1_1_window_handle_getter_1a2a93ca4faed21f0aac1d791a781e396a" prot="public" virt="non-virtual"><scope>VolumeControl::WPF::WindowHandleGetter</scope><name>GetWindowHandle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
