<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="interface_hotkey_lib_1_1_i_key_combo" kind="interface" language="C#" prot="public">
    <compoundname>HotkeyLib::IKeyCombo</compoundname>
    <basecompoundref prot="public" virt="non-virtual">INotifyPropertyChanged</basecompoundref>
    <derivedcompoundref refid="struct_hotkey_lib_1_1_key_combo" prot="public" virt="non-virtual">HotkeyLib.KeyCombo</derivedcompoundref>
    <derivedcompoundref refid="class_hotkey_lib_1_1_windows_hotkey" prot="public" virt="non-virtual">HotkeyLib.WindowsHotkey</derivedcompoundref>
    <derivedcompoundref refid="class_volume_control_1_1_hotkeys_1_1_bindable_windows_hotkey" prot="public" virt="non-virtual">VolumeControl.Hotkeys.BindableWindowsHotkey</derivedcompoundref>
      <sectiondef kind="property">
      <memberdef kind="property" id="interface_hotkey_lib_1_1_i_key_combo_1af5183f57558c2f7cf69d24ed92931655" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>Keys</type>
        <definition>Keys HotkeyLib.IKeyCombo.Key</definition>
        <argsstring></argsstring>
        <name>Key</name>
        <briefdescription>
<para>The primary key on the Keyboard. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/IKeyCombo.cs" line="15" column="14" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/IKeyCombo.cs" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="property" id="interface_hotkey_lib_1_1_i_key_combo_1a26654b3c70c5c37895e9ec5c9dde5df4" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="namespace_hotkey_lib_1a0ee197083bcd7c48bc94a25ec4eb78e4" kindref="member">Modifier</ref></type>
        <definition>Modifier HotkeyLib.IKeyCombo.Mod</definition>
        <argsstring></argsstring>
        <name>Mod</name>
        <briefdescription>
<para>The modifier key bitfield. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/IKeyCombo.cs" line="19" column="18" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/IKeyCombo.cs" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="property" id="interface_hotkey_lib_1_1_i_key_combo_1a8a22366603446db14e80ad6fb9c9417e" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool HotkeyLib.IKeyCombo.Alt</definition>
        <argsstring></argsstring>
        <name>Alt</name>
        <briefdescription>
<para>Get or set whether the Alt modifier key is enabled. This corresponds to the first bit in the modifier key bitfield. Both the left and right modifier keys apply here, there is no method available to limit the key combination to only the left or right modifier key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/IKeyCombo.cs" line="25" column="14" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/IKeyCombo.cs" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="property" id="interface_hotkey_lib_1_1_i_key_combo_1ad8e6219a7a27aba553e19f73da4af71d" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool HotkeyLib.IKeyCombo.Ctrl</definition>
        <argsstring></argsstring>
        <name>Ctrl</name>
        <briefdescription>
<para>Get or set whether the Ctrl modifier key is enabled. This corresponds to the second bit in the modifier key bitfield. Both the left and right modifier keys apply here, there is no method available to limit the key combination to only the left or right modifier key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/IKeyCombo.cs" line="31" column="14" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/IKeyCombo.cs" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="property" id="interface_hotkey_lib_1_1_i_key_combo_1a672e2fef953f9c53626652ffdd1d9cdd" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool HotkeyLib.IKeyCombo.Shift</definition>
        <argsstring></argsstring>
        <name>Shift</name>
        <briefdescription>
<para>Get or set whether the Shift modifier key is enabled. This corresponds to the third bit in the modifier key bitfield. Both the left and right modifier keys apply here, there is no method available to limit the key combination to only the left or right modifier key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/IKeyCombo.cs" line="37" column="14" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/IKeyCombo.cs" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="property" id="interface_hotkey_lib_1_1_i_key_combo_1a5eecb90e5c862cddd24adb19960321de" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool HotkeyLib.IKeyCombo.Win</definition>
        <argsstring></argsstring>
        <name>Win</name>
        <briefdescription>
<para>Get or set whether the &quot;Windows Key&quot; (super) modifier key is enabled. This corresponds to the fourth bit in the modifier key bitfield. Both the left and right modifier keys apply here, there is no method available to limit the key combination to only the left or right modifier key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/IKeyCombo.cs" line="43" column="14" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/IKeyCombo.cs" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="property" id="interface_hotkey_lib_1_1_i_key_combo_1ab3ce0858678000582b00d99050bd4ff4" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool HotkeyLib.IKeyCombo.Valid</definition>
        <argsstring></argsstring>
        <name>Valid</name>
        <briefdescription>
<para>Checks if this <ref refid="struct_hotkey_lib_1_1_key_combo" kindref="compound">KeyCombo</ref> instance contains a valid keyboard key combination. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>true</para>
</entry><entry thead="no"><para>This <ref refid="struct_hotkey_lib_1_1_key_combo" kindref="compound">KeyCombo</ref> instance is valid, and may be registered with the WIN32 API. </para>
</entry></row>
<row>
<entry thead="no"><para>false</para>
</entry><entry thead="no"><para>This <ref refid="struct_hotkey_lib_1_1_key_combo" kindref="compound">KeyCombo</ref> instance is invalid and cannot be registered. </para>
</entry></row>
</table>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/IKeyCombo.cs" line="51" column="14" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/IKeyCombo.cs" bodystart="51" bodyend="51"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interface_hotkey_lib_1_1_i_key_combo_1a8973de0486c6aff4bea544a29a941bac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string?</type>
        <definition>string? HotkeyLib.IKeyCombo.ToString</definition>
        <argsstring>()</argsstring>
        <name>ToString</name>
        <reimplementedby refid="struct_hotkey_lib_1_1_key_combo_1a8daf42735f2789b05da8beb15eed93e4">ToString</reimplementedby>
        <reimplementedby refid="class_hotkey_lib_1_1_windows_hotkey_1a108498ac1272bf598bfb56af65e1e9d2">ToString</reimplementedby>
        <reimplementedby refid="class_volume_control_1_1_hotkeys_1_1_bindable_windows_hotkey_1ad116957e5ed244efbe4c143468aff790">ToString</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/IKeyCombo.cs" line="55" column="16"/>
      </memberdef>
      <memberdef kind="function" id="interface_hotkey_lib_1_1_i_key_combo_1af550de1abed16c86508cec73769ae3a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string HotkeyLib.IKeyCombo.Serialize</definition>
        <argsstring>()</argsstring>
        <name>Serialize</name>
        <reimplementedby refid="struct_hotkey_lib_1_1_key_combo_1ae81e583c494904f15c03879975f75c1d">Serialize</reimplementedby>
        <reimplementedby refid="class_hotkey_lib_1_1_windows_hotkey_1acb2f8fe30c9c61abb3d140569907a40d">Serialize</reimplementedby>
        <reimplementedby refid="class_volume_control_1_1_hotkeys_1_1_bindable_windows_hotkey_1a1c7af5d6a0957de3ddb9033625ddb51b">Serialize</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/IKeyCombo.cs" line="56" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a combination of one keyboard key and any number of modifier keys. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>HotkeyLib.WindowsHotkey</label>
        <link refid="class_hotkey_lib_1_1_windows_hotkey"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>INotifyPropertyChanged</label>
      </node>
      <node id="1">
        <label>HotkeyLib.IKeyCombo</label>
        <link refid="interface_hotkey_lib_1_1_i_key_combo"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>HotkeyLib.KeyCombo</label>
        <link refid="struct_hotkey_lib_1_1_key_combo"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>VolumeControl.Hotkeys.BindableWindowsHotkey</label>
        <link refid="class_volume_control_1_1_hotkeys_1_1_bindable_windows_hotkey"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>INotifyPropertyChanged</label>
      </node>
      <node id="1">
        <label>HotkeyLib.IKeyCombo</label>
        <link refid="interface_hotkey_lib_1_1_i_key_combo"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="X:/_Workspace/_repo/volume-control-3/HotkeyLib/IKeyCombo.cs" line="9" column="22" bodyfile="X:/_Workspace/_repo/volume-control-3/HotkeyLib/IKeyCombo.cs" bodystart="10" bodyend="58"/>
    <listofallmembers>
      <member refid="interface_hotkey_lib_1_1_i_key_combo_1a8a22366603446db14e80ad6fb9c9417e" prot="public" virt="non-virtual"><scope>HotkeyLib::IKeyCombo</scope><name>Alt</name></member>
      <member refid="interface_hotkey_lib_1_1_i_key_combo_1ad8e6219a7a27aba553e19f73da4af71d" prot="public" virt="non-virtual"><scope>HotkeyLib::IKeyCombo</scope><name>Ctrl</name></member>
      <member refid="interface_hotkey_lib_1_1_i_key_combo_1af5183f57558c2f7cf69d24ed92931655" prot="public" virt="non-virtual"><scope>HotkeyLib::IKeyCombo</scope><name>Key</name></member>
      <member refid="interface_hotkey_lib_1_1_i_key_combo_1a26654b3c70c5c37895e9ec5c9dde5df4" prot="public" virt="non-virtual"><scope>HotkeyLib::IKeyCombo</scope><name>Mod</name></member>
      <member refid="interface_hotkey_lib_1_1_i_key_combo_1af550de1abed16c86508cec73769ae3a5" prot="public" virt="non-virtual"><scope>HotkeyLib::IKeyCombo</scope><name>Serialize</name></member>
      <member refid="interface_hotkey_lib_1_1_i_key_combo_1a672e2fef953f9c53626652ffdd1d9cdd" prot="public" virt="non-virtual"><scope>HotkeyLib::IKeyCombo</scope><name>Shift</name></member>
      <member refid="interface_hotkey_lib_1_1_i_key_combo_1a8973de0486c6aff4bea544a29a941bac" prot="public" virt="non-virtual"><scope>HotkeyLib::IKeyCombo</scope><name>ToString</name></member>
      <member refid="interface_hotkey_lib_1_1_i_key_combo_1ab3ce0858678000582b00d99050bd4ff4" prot="public" virt="non-virtual"><scope>HotkeyLib::IKeyCombo</scope><name>Valid</name></member>
      <member refid="interface_hotkey_lib_1_1_i_key_combo_1a5eecb90e5c862cddd24adb19960321de" prot="public" virt="non-virtual"><scope>HotkeyLib::IKeyCombo</scope><name>Win</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
