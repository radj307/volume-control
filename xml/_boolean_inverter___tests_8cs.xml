<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_boolean_inverter___tests_8cs" kind="file" language="C#">
    <compoundname>BooleanInverter_Tests.cs</compoundname>
    <innerclass refid="class_volume_control_1_1_unit_tests_1_1_w_p_f_1_1_converters_1_1_boolean_inverter___tests" prot="public">VolumeControl::UnitTests::WPF::Converters::BooleanInverter_Tests</innerclass>
    <innerclass refid="struct_volume_control_1_1_unit_tests_1_1_w_p_f_1_1_converters_1_1_boolean_inverter___tests_1_1_testing_type" prot="private">VolumeControl::UnitTests::WPF::Converters::BooleanInverter_Tests::TestingType</innerclass>
    <innernamespace refid="namespace_volume_control">VolumeControl</innernamespace>
    <innernamespace refid="namespace_volume_control_1_1_unit_tests">VolumeControl::UnitTests</innernamespace>
    <innernamespace refid="namespace_volume_control_1_1_unit_tests_1_1_w_p_f">VolumeControl::UnitTests::WPF</innernamespace>
    <innernamespace refid="namespace_volume_control_1_1_unit_tests_1_1_w_p_f_1_1_converters">VolumeControl::UnitTests::WPF::Converters</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_volume_control" kindref="compound">VolumeControl</ref>.<ref refid="namespace_volume_control_1_1_w_p_f" kindref="compound">WPF</ref>.<ref refid="namespace_volume_control_1_1_w_p_f_1_1_converters" kindref="compound">Converters</ref>;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.VisualStudio.TestTools.UnitTesting;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="namespace_volume_control_1_1_unit_tests_1_1_w_p_f" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_volume_control_1_1_unit_tests_1_1_w_p_f_1_1_converters" kindref="compound">VolumeControl.UnitTests.WPF.Converters</ref></highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>[TestClass()]</highlight></codeline>
<codeline lineno="9" refid="class_volume_control_1_1_unit_tests_1_1_w_p_f_1_1_converters_1_1_boolean_inverter___tests" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_volume_control_1_1_unit_tests_1_1_w_p_f_1_1_converters_1_1_boolean_inverter___tests" kindref="compound">BooleanInverter_Tests</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TestingType<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="class_volume_control_1_1_w_p_f_1_1_converters_1_1_boolean_inverter" kindref="compound">BooleanInverter</ref><sp/>conv<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[TestMethod()]</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Convert_Test()</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.IsTrue((</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)conv.Convert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!));</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.IsFalse((</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)conv.Convert(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!));</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.IsTrue((</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)conv.Convert(</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!));</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.IsFalse((</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)conv.Convert(</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!));</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.ThrowsException&lt;Exception&gt;(()<sp/>=&gt;<sp/>{<sp/>conv.Convert(</highlight><highlight class="stringliteral">&quot;hello&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!);<sp/>});</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.ThrowsException&lt;Exception&gt;(()<sp/>=&gt;<sp/>{<sp/>conv.Convert(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TestingType(),<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!);<sp/>});</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[TestMethod()]</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConvertBack_Test()</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.IsTrue((</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)conv.ConvertBack(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.IsFalse((</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)conv.ConvertBack(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.IsTrue((</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)conv.ConvertBack(</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.IsFalse((</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)conv.ConvertBack(</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.ThrowsException&lt;Exception&gt;(()<sp/>=&gt;<sp/>{<sp/>conv.ConvertBack(</highlight><highlight class="stringliteral">&quot;hello&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!);<sp/>});</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.ThrowsException&lt;Exception&gt;(()<sp/>=&gt;<sp/>{<sp/>conv.ConvertBack(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TestingType(),<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">!);<sp/>});</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.UnitTests/WPF/Converters/BooleanInverter_Tests.cs"/>
  </compounddef>
</doxygen>
