<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager" kind="class" language="C#" prot="public">
    <compoundname>VolumeControl::Hotkeys::HotkeyManager</compoundname>
    <basecompoundref prot="public" virt="non-virtual">INotifyCollectionChanged</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">IDisposable</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a4956a5030fdd80487df645b42459e569" prot="public" static="no" mutable="no">
        <type>IntPtr</type>
        <definition>IntPtr VolumeControl.Hotkeys.HotkeyManager.OwnerHandle</definition>
        <argsstring></argsstring>
        <name>OwnerHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="28" column="23" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1ad882a8d5408199fdf52f393adb62f7a6" prot="private" static="no" mutable="no">
        <type>HwndSource</type>
        <definition>HwndSource VolumeControl.Hotkeys.HotkeyManager.HwndSource</definition>
        <argsstring></argsstring>
        <name>HwndSource</name>
        <initializer>= null!</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="29" column="28" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a66985546b02558576399559139a39166" prot="private" static="no" mutable="no">
        <type>readonly <ref refid="interface_volume_control_1_1_hotkeys_1_1_interfaces_1_1_i_hotkey_action_manager" kindref="compound">IHotkeyActionManager</ref></type>
        <definition>readonly IHotkeyActionManager VolumeControl.Hotkeys.HotkeyManager._hotkeyActions</definition>
        <argsstring></argsstring>
        <name>_hotkeyActions</name>
        <initializer>= null!</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="30" column="47" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a26e44c5fb0e0b1209488455c81aaac8e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool VolumeControl.Hotkeys.HotkeyManager.disposedValue</definition>
        <argsstring></argsstring>
        <name>disposedValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="31" column="22" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1aeae3b24e598a0653279fc93e0cd5644f" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>NotifyCollectionChangedEventHandler?</type>
        <definition>NotifyCollectionChangedEventHandler? VolumeControl.Hotkeys.HotkeyManager.CollectionChanged</definition>
        <argsstring></argsstring>
        <name>CollectionChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="35" column="58" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="property" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1aadd4bb341f0d3e6cdffe92b3168b794a" prot="private" static="yes" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_settings" kindref="compound">HotkeyManagerSettings</ref></type>
        <definition>HotkeyManagerSettings VolumeControl.Hotkeys.HotkeyManager.Settings</definition>
        <argsstring></argsstring>
        <name>Settings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="43" column="46" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a73370ecb2a0dfb9feac98515eca8c62b" prot="private" static="yes" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_volume_control_1_1_log_1_1_log_writer" kindref="compound">LogWriter</ref></type>
        <definition>LogWriter VolumeControl.Hotkeys.HotkeyManager.Log</definition>
        <argsstring></argsstring>
        <name>Log</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="44" column="34" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a0ce84311e2ea57730ca1075f8b15c416" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="interface_volume_control_1_1_hotkeys_1_1_interfaces_1_1_i_hotkey_action_manager" kindref="compound">IHotkeyActionManager</ref></type>
        <definition>IHotkeyActionManager VolumeControl.Hotkeys.HotkeyManager.Actions</definition>
        <argsstring></argsstring>
        <name>Actions</name>
        <briefdescription>
<para>Action manager object </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="48" column="37" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a572ad221030bdfab13d9fc09835b25d2" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_volume_control_1_1_w_p_f_1_1_collections_1_1_observable_list" kindref="compound">ObservableList</ref>&lt; <ref refid="class_volume_control_1_1_hotkeys_1_1_bindable_windows_hotkey" kindref="compound">BindableWindowsHotkey</ref> &gt;</type>
        <definition>ObservableList&lt;BindableWindowsHotkey&gt; VolumeControl.Hotkeys.HotkeyManager.Hotkeys</definition>
        <argsstring></argsstring>
        <name>Hotkeys</name>
        <initializer>= new()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="49" column="31" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="49" bodyend="49"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1ac4e52046790fdd5d2e75a1c50510da22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VolumeControl.Hotkeys.HotkeyManager.HotkeyManager</definition>
        <argsstring>(IHotkeyActionManager actionManager, bool loadNow=false)</argsstring>
        <name>HotkeyManager</name>
        <param>
          <type><ref refid="interface_volume_control_1_1_hotkeys_1_1_interfaces_1_1_i_hotkey_action_manager" kindref="compound">IHotkeyActionManager</ref></type>
          <declname>actionManager</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>loadNow</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actionManager</parametername>
</parameternamelist>
<parameterdescription>
<para>The action manager to use.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loadNow</parametername>
</parameternamelist>
<parameterdescription>
<para>When true, the <ref refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a2109e5e62f1d469c63acc9c6fd832f61" kindref="member">LoadHotkeys</ref> method is called from the constructor. Set this to false if you want to do it yourself.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="18" column="16" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="18" bodyend="24"/>
        <references refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a57c8d96dc5d4178d5b6d15a5df8fa374" compoundref="_hotkey_manager_8cs" startline="191" endline="197">VolumeControl.Hotkeys.HotkeyManager.AddHook</references>
        <references refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a2109e5e62f1d469c63acc9c6fd832f61" compoundref="_hotkey_manager_8cs" startline="119" endline="138">VolumeControl.Hotkeys.HotkeyManager.LoadHotkeys</references>
      </memberdef>
      <memberdef kind="function" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1ab9308e90e3fb6ef452aa7e17587c675b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VolumeControl.Hotkeys.HotkeyManager.AddHotkey</definition>
        <argsstring>(string name, IKeyCombo keys, string action, bool registerNow=false)</argsstring>
        <name>AddHotkey</name>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="interface_hotkey_lib_1_1_i_key_combo" kindref="compound">IKeyCombo</ref></type>
          <declname>keys</declname>
        </param>
        <param>
          <type>string</type>
          <declname>action</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>registerNow</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Create a new hotkey and add it to <ref refid="namespace_volume_control_1_1_hotkeys" kindref="compound">Hotkeys</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the new hotkey.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>The key combination of the new hotkey.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The associated action of the new hotkey.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>registerNow</parametername>
</parameternamelist>
<parameterdescription>
<para>When true, the new hotkey is registered immediately after construction.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="61" column="21" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="61" bodyend="66"/>
        <references refid="class_volume_control_1_1_log_1_1_log_writer_1adf2532f0598cac3dfe9a3660f4fb7362">VolumeControl.Log.LogWriter.Info</references>
      </memberdef>
      <memberdef kind="function" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a1cc11e4a4169628cd91c04f36f75f384" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VolumeControl.Hotkeys.HotkeyManager.AddHotkey</definition>
        <argsstring>()</argsstring>
        <name>AddHotkey</name>
        <briefdescription>
<para>Create a new blank hotkey and add it to <ref refid="namespace_volume_control_1_1_hotkeys" kindref="compound">Hotkeys</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>BindableWindowsHotkey.Name = string.Empty </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="73" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a66277b242d576b541f7bffb1f570c214" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VolumeControl.Hotkeys.HotkeyManager.DelHotkey</definition>
        <argsstring>(BindableWindowsHotkey? hk)</argsstring>
        <name>DelHotkey</name>
        <param>
          <type><ref refid="class_volume_control_1_1_hotkeys_1_1_bindable_windows_hotkey" kindref="compound">BindableWindowsHotkey</ref>?</type>
          <declname>hk</declname>
        </param>
        <briefdescription>
<para>Remove the specified hotkey from <ref refid="namespace_volume_control_1_1_hotkeys" kindref="compound">Hotkeys</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hk</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_volume_control_1_1_hotkeys_1_1_bindable_windows_hotkey" kindref="compound">BindableWindowsHotkey</ref> object to remove.<linebreak/>
If this is null, nothing happens.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="78" column="21" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="78" bodyend="84"/>
        <references refid="class_volume_control_1_1_log_1_1_log_writer_1adf2532f0598cac3dfe9a3660f4fb7362">VolumeControl.Log.LogWriter.Info</references>
      </memberdef>
      <memberdef kind="function" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a0895b21d810d82b4b44b42ea0b65a28a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VolumeControl.Hotkeys.HotkeyManager.DelHotkey</definition>
        <argsstring>(int id)</argsstring>
        <name>DelHotkey</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Remove the specified hotkey from <ref refid="namespace_volume_control_1_1_hotkeys" kindref="compound">Hotkeys</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID number of the hotkey to delete.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="89" column="21" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="89" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1aeaec8f00f4219e2e72b1d7438b413f76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VolumeControl.Hotkeys.HotkeyManager.DelAllHotkeys</definition>
        <argsstring>()</argsstring>
        <name>DelAllHotkeys</name>
        <briefdescription>
<para>Deletes all hotkeys in the list by first disposing them, then removing them from the list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="100" column="21" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="100" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a1a02a5f040925d2abd938deea3eb4d49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_volume_control_1_1_hotkeys_1_1_bindable_windows_hotkey" kindref="compound">BindableWindowsHotkey</ref>?</type>
        <definition>BindableWindowsHotkey? VolumeControl.Hotkeys.HotkeyManager.GetHotkey</definition>
        <argsstring>(int id)</argsstring>
        <name>GetHotkey</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="111" column="38"/>
      </memberdef>
      <memberdef kind="function" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a2109e5e62f1d469c63acc9c6fd832f61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VolumeControl.Hotkeys.HotkeyManager.LoadHotkeys</definition>
        <argsstring>()</argsstring>
        <name>LoadHotkeys</name>
        <briefdescription>
<para>Loads hotkeys from the settings file and binds them to the associated actions. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Make sure that the <ref refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a0ce84311e2ea57730ca1075f8b15c416" kindref="member">Actions</ref> property is set and initialized before calling this!</bold></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="119" column="21" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="119" bodyend="138"/>
        <references refid="class_volume_control_1_1_log_1_1_log_writer_1a09e652d1c8049b4b137d45dd2a6466a4">VolumeControl.Log.LogWriter.Debug</references>
        <references refid="class_volume_control_1_1_log_1_1_log_writer_1ae7780f22869e53ce4a1aad3fc6fa0bf7">VolumeControl.Log.LogWriter.Error</references>
        <referencedby refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1ac4e52046790fdd5d2e75a1c50510da22" compoundref="_hotkey_manager_8cs" startline="18" endline="24">VolumeControl.Hotkeys.HotkeyManager.HotkeyManager</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1ad179564abe8e8dcf492a365cffdcad6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VolumeControl.Hotkeys.HotkeyManager.SaveHotkeys</definition>
        <argsstring>()</argsstring>
        <name>SaveHotkeys</name>
        <briefdescription>
<para>Saves all hotkeys to the settings file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="142" column="21" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="142" bodyend="158"/>
        <references refid="class_volume_control_1_1_log_1_1_log_writer_1a09e652d1c8049b4b137d45dd2a6466a4">VolumeControl.Log.LogWriter.Debug</references>
      </memberdef>
      <memberdef kind="function" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a4c1092556d6a7c93638c37d256fb9edb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VolumeControl.Hotkeys.HotkeyManager.ResetHotkeys</definition>
        <argsstring>()</argsstring>
        <name>ResetHotkeys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="159" column="21" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="159" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1af9c366af249ab048619db4a2366f247f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VolumeControl.Hotkeys.HotkeyManager.Dispose</definition>
        <argsstring>()</argsstring>
        <name>Dispose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="228" column="21" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="228" bodyend="232"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a82111b1efcdec01dbb49ee185094c677" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>IntPtr</type>
        <definition>virtual IntPtr VolumeControl.Hotkeys.HotkeyManager.HwndHook</definition>
        <argsstring>(IntPtr hWnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)</argsstring>
        <name>HwndHook</name>
        <param>
          <type>IntPtr</type>
          <declname>hWnd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>IntPtr</type>
          <declname>wParam</declname>
        </param>
        <param>
          <type>IntPtr</type>
          <declname>lParam</declname>
        </param>
        <param>
          <type>ref bool</type>
          <declname>handled</declname>
        </param>
        <briefdescription>
<para>Handles window messages, and triggers WindowsHotkey.Pressed events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="173" column="34" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="173" bodyend="187"/>
        <referencedby refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a57c8d96dc5d4178d5b6d15a5df8fa374" compoundref="_hotkey_manager_8cs" startline="191" endline="197">VolumeControl.Hotkeys.HotkeyManager.AddHook</referencedby>
        <referencedby refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a43f5e3e31ab161cd9e8701fe39d1114e" compoundref="_hotkey_manager_8cs" startline="201" endline="207">VolumeControl.Hotkeys.HotkeyManager.RemoveHook</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a57c8d96dc5d4178d5b6d15a5df8fa374" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void VolumeControl.Hotkeys.HotkeyManager.AddHook</definition>
        <argsstring>()</argsstring>
        <name>AddHook</name>
        <briefdescription>
<para>Adds a window message hook to receive hotkey press messages and route them to the associated event trigger. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="191" column="32" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="191" bodyend="197"/>
        <references refid="class_volume_control_1_1_log_1_1_log_writer_1a09e652d1c8049b4b137d45dd2a6466a4">VolumeControl.Log.LogWriter.Debug</references>
        <references refid="class_volume_control_1_1_w_p_f_1_1_window_handle_getter_1ae1d05b0322c8ff6efcef70a2538ba1fb">VolumeControl.WPF.WindowHandleGetter.GetHwndSource</references>
        <references refid="class_volume_control_1_1_w_p_f_1_1_window_handle_getter_1af3958c64d6b5bae2bcf558dacacba07a">VolumeControl.WPF.WindowHandleGetter.GetWindowHandle</references>
        <references refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a82111b1efcdec01dbb49ee185094c677" compoundref="_hotkey_manager_8cs" startline="173" endline="187">VolumeControl.Hotkeys.HotkeyManager.HwndHook</references>
        <referencedby refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1ac4e52046790fdd5d2e75a1c50510da22" compoundref="_hotkey_manager_8cs" startline="18" endline="24">VolumeControl.Hotkeys.HotkeyManager.HotkeyManager</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a43f5e3e31ab161cd9e8701fe39d1114e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void VolumeControl.Hotkeys.HotkeyManager.RemoveHook</definition>
        <argsstring>()</argsstring>
        <name>RemoveHook</name>
        <briefdescription>
<para>Removes the message hook from the application&apos;s handle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="201" column="32" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="201" bodyend="207"/>
        <references refid="class_volume_control_1_1_log_1_1_log_writer_1a09e652d1c8049b4b137d45dd2a6466a4">VolumeControl.Log.LogWriter.Debug</references>
        <references refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a82111b1efcdec01dbb49ee185094c677" compoundref="_hotkey_manager_8cs" startline="173" endline="187">VolumeControl.Hotkeys.HotkeyManager.HwndHook</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1ac177ed343eace2b5dc0a4fb5dea653f2" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VolumeControl.Hotkeys.HotkeyManager.Dispose</definition>
        <argsstring>(bool disposing)</argsstring>
        <name>Dispose</name>
        <param>
          <type>bool</type>
          <declname>disposing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="211" column="22" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="211" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1ae3a00edf9de4fed050e063362c83402d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VolumeControl.Hotkeys.HotkeyManager.~HotkeyManager</definition>
        <argsstring>()</argsstring>
        <name>~HotkeyManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="226" column="9" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="226" bodyend="226"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This object is responsible for managing hotkeys at runtime. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>VolumeControl.Hotkeys.HotkeyManager</label>
        <link refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>INotifyCollectionChanged</label>
      </node>
      <node id="3">
        <label>IDisposable</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>VolumeControl.Hotkeys.HotkeyManager</label>
        <link refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>INotifyCollectionChanged</label>
      </node>
      <node id="3">
        <label>IDisposable</label>
      </node>
    </collaborationgraph>
    <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" line="12" column="11" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Hotkeys/HotkeyManager.cs" bodystart="13" bodyend="235"/>
    <listofallmembers>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a66985546b02558576399559139a39166" prot="private" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>_hotkeyActions</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a0ce84311e2ea57730ca1075f8b15c416" prot="public" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>Actions</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a57c8d96dc5d4178d5b6d15a5df8fa374" prot="protected" virt="virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>AddHook</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1ab9308e90e3fb6ef452aa7e17587c675b" prot="public" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>AddHotkey</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a1cc11e4a4169628cd91c04f36f75f384" prot="public" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>AddHotkey</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1aeae3b24e598a0653279fc93e0cd5644f" prot="public" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>CollectionChanged</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1aeaec8f00f4219e2e72b1d7438b413f76" prot="public" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>DelAllHotkeys</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a66277b242d576b541f7bffb1f570c214" prot="public" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>DelHotkey</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a0895b21d810d82b4b44b42ea0b65a28a" prot="public" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>DelHotkey</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1ac177ed343eace2b5dc0a4fb5dea653f2" prot="private" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>Dispose</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1af9c366af249ab048619db4a2366f247f" prot="public" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>Dispose</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a26e44c5fb0e0b1209488455c81aaac8e" prot="private" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>disposedValue</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a1a02a5f040925d2abd938deea3eb4d49" prot="public" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>GetHotkey</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1ac4e52046790fdd5d2e75a1c50510da22" prot="public" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>HotkeyManager</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a572ad221030bdfab13d9fc09835b25d2" prot="public" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>Hotkeys</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a82111b1efcdec01dbb49ee185094c677" prot="protected" virt="virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>HwndHook</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1ad882a8d5408199fdf52f393adb62f7a6" prot="private" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>HwndSource</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a2109e5e62f1d469c63acc9c6fd832f61" prot="public" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>LoadHotkeys</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a73370ecb2a0dfb9feac98515eca8c62b" prot="private" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>Log</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a4956a5030fdd80487df645b42459e569" prot="public" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>OwnerHandle</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a43f5e3e31ab161cd9e8701fe39d1114e" prot="protected" virt="virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>RemoveHook</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1a4c1092556d6a7c93638c37d256fb9edb" prot="public" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>ResetHotkeys</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1ad179564abe8e8dcf492a365cffdcad6c" prot="public" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>SaveHotkeys</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1aadd4bb341f0d3e6cdffe92b3168b794a" prot="private" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>Settings</name></member>
      <member refid="class_volume_control_1_1_hotkeys_1_1_hotkey_manager_1ae3a00edf9de4fed050e063362c83402d" prot="private" virt="non-virtual"><scope>VolumeControl::Hotkeys::HotkeyManager</scope><name>~HotkeyManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
