<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_window_handle_getter___tests_8cs" kind="file" language="C#">
    <compoundname>WindowHandleGetter_Tests.cs</compoundname>
    <innerclass refid="class_volume_control_1_1_unit_tests_1_1_w_p_f_1_1_converters_1_1_window_handle_getter___tests" prot="public">VolumeControl::UnitTests::WPF::Converters::WindowHandleGetter_Tests</innerclass>
    <innernamespace refid="namespace_volume_control">VolumeControl</innernamespace>
    <innernamespace refid="namespace_volume_control_1_1_unit_tests">VolumeControl::UnitTests</innernamespace>
    <innernamespace refid="namespace_volume_control_1_1_unit_tests_1_1_w_p_f">VolumeControl::UnitTests::WPF</innernamespace>
    <innernamespace refid="namespace_volume_control_1_1_unit_tests_1_1_w_p_f_1_1_converters">VolumeControl::UnitTests::WPF::Converters</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_volume_control" kindref="compound">VolumeControl</ref>.<ref refid="namespace_volume_control_1_1_w_p_f" kindref="compound">WPF</ref>;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.VisualStudio.TestTools.UnitTesting;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_volume_control_1_1_unit_tests_1_1_w_p_f_1_1_converters" kindref="compound">VolumeControl.UnitTests.WPF.Converters</ref></highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>[TestClass()]</highlight></codeline>
<codeline lineno="8" refid="class_volume_control_1_1_unit_tests_1_1_w_p_f_1_1_converters_1_1_window_handle_getter___tests" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_volume_control_1_1_unit_tests_1_1_w_p_f_1_1_converters_1_1_window_handle_getter___tests" kindref="compound">WindowHandleGetter_Tests</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[TestMethod()]</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetWindowHandle_Test()<sp/>=&gt;<sp/>Assert.AreNotSame(IntPtr.Zero,<sp/><ref refid="class_volume_control_1_1_w_p_f_1_1_window_handle_getter" kindref="compound">WindowHandleGetter</ref>.<ref refid="class_volume_control_1_1_w_p_f_1_1_window_handle_getter_1af3958c64d6b5bae2bcf558dacacba07a" kindref="member">GetWindowHandle</ref>());</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[TestMethod()]</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetHwndSource_Test()<sp/>=&gt;<sp/>Assert.IsNotNull(<ref refid="class_volume_control_1_1_w_p_f_1_1_window_handle_getter" kindref="compound">WindowHandleGetter</ref>.<ref refid="class_volume_control_1_1_w_p_f_1_1_window_handle_getter_1ae1d05b0322c8ff6efcef70a2538ba1fb" kindref="member">GetHwndSource</ref>(<ref refid="class_volume_control_1_1_w_p_f_1_1_window_handle_getter" kindref="compound">WindowHandleGetter</ref>.<ref refid="class_volume_control_1_1_w_p_f_1_1_window_handle_getter_1af3958c64d6b5bae2bcf558dacacba07a" kindref="member">GetWindowHandle</ref>()));</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.UnitTests/WPF/Converters/WindowHandleGetter_Tests.cs"/>
  </compounddef>
</doxygen>
