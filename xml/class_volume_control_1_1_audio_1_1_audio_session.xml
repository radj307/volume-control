<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_volume_control_1_1_audio_1_1_audio_session" kind="class" language="C#" prot="public">
    <compoundname>VolumeControl::Audio::AudioSession</compoundname>
    <basecompoundref refid="interface_volume_control_1_1_audio_1_1_interfaces_1_1_i_session" prot="public" virt="non-virtual">VolumeControl.Audio.Interfaces.ISession</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">INotifyPropertyChanged</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">INotifyPropertyChanging</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">IDisposable</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_volume_control_1_1_audio_1_1_audio_session_1a5e5a1d15e9e33d0ef5b2c042ba75a9d6" prot="private" static="no" mutable="no">
        <type></type>
        <definition>VolumeControl.Audio.AudioSession.ImageSource?</definition>
        <argsstring></argsstring>
        <name>ImageSource?</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="38" column="17" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_volume_control_1_1_audio_1_1_audio_session_1ab762b07b83ec0eb7de00ff8ed35348a0" prot="private" static="no" mutable="no">
        <type>ImageSource??</type>
        <definition>ImageSource?? VolumeControl.Audio.AudioSession._icons</definition>
        <argsstring></argsstring>
        <name>_icons</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="38" column="41" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_volume_control_1_1_audio_1_1_audio_session_1a59570bbe9a8ba549280dcafb3b99a64a" prot="private" static="no" mutable="no">
        <type>readonly AudioSessionControl</type>
        <definition>readonly AudioSessionControl VolumeControl.Audio.AudioSession._controller</definition>
        <argsstring></argsstring>
        <name>_controller</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="39" column="46" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_volume_control_1_1_audio_1_1_audio_session_1a47b4dac491e85bfa34b16d876b9774d2" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>SimpleAudioVolume</type>
        <definition>SimpleAudioVolume VolumeControl.Audio.AudioSession.VolumeController</definition>
        <argsstring></argsstring>
        <name>VolumeController</name>
        <briefdescription>
<para>Gets the SimpleAudioVolume object from the underlying AudioSessionControl type. </para>
        </briefdescription>
        <detaileddescription>
<para>This object is from NAudio.<linebreak/>
If you&apos;re writing an addon, install the &apos;NAudio&apos; nuget package to be able to use this.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="47" column="34" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_volume_control_1_1_audio_1_1_audio_session_1a7d0a0803254aee7bce75cb6df2307c2b" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>AudioSessionState</type>
        <definition>AudioSessionState VolumeControl.Audio.AudioSession.State</definition>
        <argsstring></argsstring>
        <name>State</name>
        <briefdescription>
<para>Gets the current state of the audio session.<linebreak/>
 See AudioSessionState. </para>
        </briefdescription>
        <detaileddescription>
<para>This object is from NAudio.<linebreak/>
If you&apos;re writing an addon, install the &apos;NAudio&apos; nuget package to be able to use this.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="53" column="34" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_volume_control_1_1_audio_1_1_audio_session_1ae18e0e01b019d4047c8bbe12f5244504" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>string</type>
        <definition>string VolumeControl.Audio.AudioSession.IconPath</definition>
        <argsstring></argsstring>
        <name>IconPath</name>
        <briefdescription>
<para>This is the location of this sessions icon on the system and may or may not actually be set.<linebreak/>
<bold>Do not rely on this being available, many third-party programs do not provide it!</bold> </para>
        </briefdescription>
        <detaileddescription>
<para>This can point to nothing, one icon in a DLL package, an executable, or all sorts of other formats.<linebreak/>
Do not use this for retrieving icon images directly, instead use <ref refid="class_volume_control_1_1_audio_1_1_audio_session_1ae72ec6880a2eb08bd8d6a00824713199" kindref="member">SmallIcon</ref>/<ref refid="class_volume_control_1_1_audio_1_1_audio_session_1aefdede45b3e8f48fdb89b70dcc2c1159" kindref="member">LargeIcon</ref>.<linebreak/>
You can also use <ref refid="class_volume_control_1_1_audio_1_1_audio_session_1a1cdcccdbeab9a8364824211253903328" kindref="member">Icon</ref> directly if you don&apos;t care about the icon size.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="56" column="23" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_volume_control_1_1_audio_1_1_audio_session_1ae72ec6880a2eb08bd8d6a00824713199" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>ImageSource?</type>
        <definition>ImageSource? VolumeControl.Audio.AudioSession.SmallIcon</definition>
        <argsstring></argsstring>
        <name>SmallIcon</name>
        <briefdescription>
<para>The small icon located at the <ref refid="class_volume_control_1_1_audio_1_1_audio_session_1ae18e0e01b019d4047c8bbe12f5244504" kindref="member">IconPath</ref>, or null if no icon was found. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that the icon properties all use internal caching; you don&apos;t need to worry about using these properties repeatedly for fear of performance loss, as the only time the icons are actually retrieved is the first time any of the icon properties are called.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="61" column="28" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_volume_control_1_1_audio_1_1_audio_session_1aefdede45b3e8f48fdb89b70dcc2c1159" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>ImageSource?</type>
        <definition>ImageSource? VolumeControl.Audio.AudioSession.LargeIcon</definition>
        <argsstring></argsstring>
        <name>LargeIcon</name>
        <briefdescription>
<para>The large icon located at the <ref refid="class_volume_control_1_1_audio_1_1_audio_session_1ae18e0e01b019d4047c8bbe12f5244504" kindref="member">IconPath</ref>, or null if no icon was found. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that the icon properties all use internal caching; you don&apos;t need to worry about using these properties repeatedly for fear of performance loss, as the only time the icons are actually retrieved is the first time any of the icon properties are called.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="66" column="28" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_volume_control_1_1_audio_1_1_audio_session_1a1cdcccdbeab9a8364824211253903328" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>ImageSource?</type>
        <definition>ImageSource? VolumeControl.Audio.AudioSession.Icon</definition>
        <argsstring></argsstring>
        <name>Icon</name>
        <briefdescription>
<para>Gets the large or small icon, depending on whether they are null or not. </para>
        </briefdescription>
        <detaileddescription>
<para>Checks and returns <ref refid="class_volume_control_1_1_audio_1_1_audio_session_1aefdede45b3e8f48fdb89b70dcc2c1159" kindref="member">LargeIcon</ref> first, if that is null then it checks and returns <ref refid="class_volume_control_1_1_audio_1_1_audio_session_1ae72ec6880a2eb08bd8d6a00824713199" kindref="member">SmallIcon</ref>.<linebreak/>
If both are null, returns null.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="71" column="28" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_volume_control_1_1_audio_1_1_audio_session_1a961f3e23e0ad0db762c1884a91b4aef5" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_volume_control_1_1_audio_1_1_audio_session_1a6b2e52691965a8840591964da0bb8295" kindref="member">int</ref></type>
        <definition>int VolumeControl.Audio.AudioSession.Volume</definition>
        <argsstring></argsstring>
        <name>Volume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="73" column="20" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="74" bodyend="82"/>
      </memberdef>
      <memberdef kind="property" id="class_volume_control_1_1_audio_1_1_audio_session_1a9cf56bbb3fb96a826b38c5d5a94168ed" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float VolumeControl.Audio.AudioSession.NativeVolume</definition>
        <argsstring></argsstring>
        <name>NativeVolume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="84" column="22" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="85" bodyend="93"/>
      </memberdef>
      <memberdef kind="property" id="class_volume_control_1_1_audio_1_1_audio_session_1a0352c733c7ac9f3b1631bfeccd7f8ec0" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool VolumeControl.Audio.AudioSession.Muted</definition>
        <argsstring></argsstring>
        <name>Muted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="95" column="21" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="96" bodyend="104"/>
      </memberdef>
      <memberdef kind="property" id="class_volume_control_1_1_audio_1_1_audio_session_1a30cfd4a7b3a77615294787e6c3cb2c35" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>string</type>
        <definition>string VolumeControl.Audio.AudioSession.ProcessName</definition>
        <argsstring></argsstring>
        <name>ProcessName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="106" column="23" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="106" bodyend="106"/>
        <referencedby refid="class_volume_control_1_1_audio_1_1_audio_session_1aeb56d8f5f6a97fde371c4795473c1f7a" compoundref="_audio_session_8cs" startline="20" endline="35">VolumeControl.Audio.AudioSession.AudioSession</referencedby>
        <referencedby refid="class_volume_control_1_1_audio_1_1_audio_a_p_i_1a235bf56d5ab86e28765f7d8c7e198a45" compoundref="_audio_a_p_i_8cs" startline="525" endline="553">VolumeControl.Audio.AudioAPI.FindSessionWithIdentifier</referencedby>
        <referencedby refid="class_volume_control_1_1_audio_1_1_audio_a_p_i_1a24bae87813a39da4ec9ccf19fb7b888e" compoundref="_audio_a_p_i_8cs" startline="608" endline="624">VolumeControl.Audio.AudioAPI.GetSessionNames</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_volume_control_1_1_audio_1_1_audio_session_1a569d4fb917a60bc03f8861e8f9cb0fc7" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>long</type>
        <definition>long VolumeControl.Audio.AudioSession.PID</definition>
        <argsstring></argsstring>
        <name>PID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="108" column="21" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="108" bodyend="108"/>
        <referencedby refid="class_volume_control_1_1_audio_1_1_audio_session_1aeb56d8f5f6a97fde371c4795473c1f7a" compoundref="_audio_session_8cs" startline="20" endline="35">VolumeControl.Audio.AudioSession.AudioSession</referencedby>
        <referencedby refid="class_volume_control_1_1_audio_1_1_audio_a_p_i_1a235bf56d5ab86e28765f7d8c7e198a45" compoundref="_audio_a_p_i_8cs" startline="525" endline="553">VolumeControl.Audio.AudioAPI.FindSessionWithIdentifier</referencedby>
        <referencedby refid="class_volume_control_1_1_audio_1_1_audio_session_1a59a3626b8a1cde96c65a68b65d5182da" compoundref="_audio_session_8cs" startline="153" endline="164">VolumeControl.Audio.AudioSession.GetProcess</referencedby>
        <referencedby refid="class_volume_control_1_1_audio_1_1_audio_a_p_i_1a24bae87813a39da4ec9ccf19fb7b888e" compoundref="_audio_a_p_i_8cs" startline="608" endline="624">VolumeControl.Audio.AudioAPI.GetSessionNames</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_volume_control_1_1_audio_1_1_audio_session_1a356c261a4c345fc0c739c5e66e4e66ea" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>string</type>
        <definition>string VolumeControl.Audio.AudioSession.ProcessIdentifier</definition>
        <argsstring></argsstring>
        <name>ProcessIdentifier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="110" column="23" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="110" bodyend="-1"/>
        <referencedby refid="class_volume_control_1_1_audio_1_1_audio_a_p_i_1a235bf56d5ab86e28765f7d8c7e198a45" compoundref="_audio_a_p_i_8cs" startline="525" endline="553">VolumeControl.Audio.AudioAPI.FindSessionWithIdentifier</referencedby>
        <referencedby refid="class_volume_control_1_1_audio_1_1_audio_a_p_i_1a24bae87813a39da4ec9ccf19fb7b888e" compoundref="_audio_a_p_i_8cs" startline="608" endline="624">VolumeControl.Audio.AudioAPI.GetSessionNames</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_volume_control_1_1_audio_1_1_audio_session_1a51d7fa029652f8b3bc08a502f5b540e9" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool VolumeControl.Audio.AudioSession.IsRunning</definition>
        <argsstring></argsstring>
        <name>IsRunning</name>
        <briefdescription>
<para>Checks if the process that owns this session is still running. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True when the process is still running, otherwise false.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="115" column="21" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="116" bodyend="136"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="event">
      <memberdef kind="event" id="class_volume_control_1_1_audio_1_1_audio_session_1a634d0a5e08d141e120a1c3990faef6d7" prot="public" static="no" add="no" remove="no" raise="no">
        <type>PropertyChangedEventHandler?</type>
        <definition>PropertyChangedEventHandler? VolumeControl.Audio.AudioSession.PropertyChanged</definition>
        <argsstring></argsstring>
        <name>PropertyChanged</name>
        <briefdescription>
<para>Triggered after one of this instance&apos;s properties have been set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="141" column="50" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_volume_control_1_1_audio_1_1_audio_session_1a1c6d4d4ccf66a058b4f89a833c7e33c4" prot="public" static="no" add="no" remove="no" raise="no">
        <type>PropertyChangingEventHandler?</type>
        <definition>PropertyChangingEventHandler? VolumeControl.Audio.AudioSession.PropertyChanging</definition>
        <argsstring></argsstring>
        <name>PropertyChanging</name>
        <briefdescription>
<para>Triggered before one of this instance&apos;s properties is being set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="143" column="51" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="143" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_volume_control_1_1_audio_1_1_audio_session_1a6b2e52691965a8840591964da0bb8295" prot="public" static="yes" mutable="no">
        <type>static</type>
        <definition>VolumeControl.Audio.AudioSession.int</definition>
        <argsstring></argsstring>
        <name>int</name>
        <briefdescription>
<para>Parses the given process identifier string into a PID and ProcessName. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>A process identifier, PID, or ProcessName to split.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a tuple where the first item is the PID and the second is the ProcessName. </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>FormatException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown when there is a colon in the string, but the characters before it are invalid as an integral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="180" column="23" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="180" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_volume_control_1_1_audio_1_1_audio_session_1aeb56d8f5f6a97fde371c4795473c1f7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VolumeControl.Audio.AudioSession.AudioSession</definition>
        <argsstring>(AudioSessionControl controller)</argsstring>
        <name>AudioSession</name>
        <param>
          <type>AudioSessionControl</type>
          <declname>controller</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying session controller instance to create this audio session object for.<linebreak/>
This object is from NAudio.<linebreak/>
If you&apos;re writing an addon, install the &apos;NAudio&apos; nuget package to be able to use this.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="20" column="16" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="20" bodyend="35"/>
        <references refid="class_volume_control_1_1_audio_1_1_audio_session_1a13f918b85f4b1281f9e5ecb5fb7d5583" compoundref="_audio_session_8cs" startline="166" endline="170">VolumeControl.Audio.AudioSession.Dispose</references>
        <references refid="class_volume_control_1_1_log_1_1_log_writer_1ae7780f22869e53ce4a1aad3fc6fa0bf7">VolumeControl.Log.LogWriter.Error</references>
        <references refid="class_volume_control_1_1_audio_1_1_audio_session_1a59a3626b8a1cde96c65a68b65d5182da" compoundref="_audio_session_8cs" startline="153" endline="164">VolumeControl.Audio.AudioSession.GetProcess</references>
        <references refid="class_volume_control_1_1_log_1_1_f_log_1affa9bfcea4468b27f8de4637eeb5a65f" compoundref="_f_log_8cs" startline="21" endline="29">VolumeControl.Log.FLog.Log</references>
        <references refid="class_volume_control_1_1_audio_1_1_audio_session_1a569d4fb917a60bc03f8861e8f9cb0fc7" compoundref="_audio_session_8cs" startline="108" endline="108">VolumeControl.Audio.AudioSession.PID</references>
        <references refid="class_volume_control_1_1_audio_1_1_audio_session_1a30cfd4a7b3a77615294787e6c3cb2c35" compoundref="_audio_session_8cs" startline="106" endline="106">VolumeControl.Audio.AudioSession.ProcessName</references>
      </memberdef>
      <memberdef kind="function" id="class_volume_control_1_1_audio_1_1_audio_session_1a59a3626b8a1cde96c65a68b65d5182da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Process?</type>
        <definition>Process? VolumeControl.Audio.AudioSession.GetProcess</definition>
        <argsstring>()</argsstring>
        <name>GetProcess</name>
        <briefdescription>
<para>Gets the process associated with this audio session instance. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The Process instance that owns the audio session represented by this instance.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="153" column="24" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="153" bodyend="164"/>
        <references refid="class_volume_control_1_1_log_1_1_log_writer_1ae7780f22869e53ce4a1aad3fc6fa0bf7">VolumeControl.Log.LogWriter.Error</references>
        <references refid="class_volume_control_1_1_log_1_1_f_log_1affa9bfcea4468b27f8de4637eeb5a65f" compoundref="_f_log_8cs" startline="21" endline="29">VolumeControl.Log.FLog.Log</references>
        <references refid="class_volume_control_1_1_audio_1_1_audio_session_1a569d4fb917a60bc03f8861e8f9cb0fc7" compoundref="_audio_session_8cs" startline="108" endline="108">VolumeControl.Audio.AudioSession.PID</references>
        <referencedby refid="class_volume_control_1_1_audio_1_1_audio_session_1aeb56d8f5f6a97fde371c4795473c1f7a" compoundref="_audio_session_8cs" startline="20" endline="35">VolumeControl.Audio.AudioSession.AudioSession</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_volume_control_1_1_audio_1_1_audio_session_1a13f918b85f4b1281f9e5ecb5fb7d5583" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VolumeControl.Audio.AudioSession.Dispose</definition>
        <argsstring>()</argsstring>
        <name>Dispose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="166" column="21" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="166" bodyend="170"/>
        <referencedby refid="class_volume_control_1_1_audio_1_1_audio_session_1aeb56d8f5f6a97fde371c4795473c1f7a" compoundref="_audio_session_8cs" startline="20" endline="35">VolumeControl.Audio.AudioSession.AudioSession</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_volume_control_1_1_audio_1_1_audio_session_1a844834f762a3d32c18360f9419049d86" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VolumeControl.Audio.AudioSession.NotifyPropertyChanged</definition>
        <argsstring>([CallerMemberName] string propertyName=&quot;&quot;)</argsstring>
        <name>NotifyPropertyChanged</name>
        <param>
          <attributes>[CallerMemberName]</attributes>
          <type>string</type>
          <declname>propertyName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="144" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_volume_control_1_1_audio_1_1_audio_session_1a1d04c4d5c487727c12dabeb00006a89c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VolumeControl.Audio.AudioSession.NotifyPropertyChanging</definition>
        <argsstring>([CallerMemberName] string propertyName=&quot;&quot;)</argsstring>
        <name>NotifyPropertyChanging</name>
        <param>
          <attributes>[CallerMemberName]</attributes>
          <type>string</type>
          <declname>propertyName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="145" column="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_volume_control_1_1_audio_1_1_audio_session_1ae75d862eb45d1d2d739e1af5bd8d63c3" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string VolumeControl.Audio.AudioSession.ParseProcessIdentifier</definition>
        <argsstring>(string identifier)</argsstring>
        <name>ParseProcessIdentifier</name>
        <param>
          <type>string</type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="180" column="34" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="180" bodyend="200"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents an audio session playing on the system. </para>
    </briefdescription>
    <detaileddescription>
<para>Some properties in this object require the NAudio library.<linebreak/>
If you&apos;re writing an addon, install the &apos;NAudio&apos; nuget package if you need to be able to use them.</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ISession</label>
        <link refid="interface_volume_control_1_1_audio_1_1_interfaces_1_1_i_session"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>INotifyPropertyChanged</label>
      </node>
      <node id="1">
        <label>VolumeControl.Audio.AudioSession</label>
        <link refid="class_volume_control_1_1_audio_1_1_audio_session"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>IDisposable</label>
      </node>
      <node id="3">
        <label>IProcess</label>
        <link refid="interface_volume_control_1_1_audio_1_1_interfaces_1_1_i_process"/>
      </node>
      <node id="5">
        <label>INotifyPropertyChanging</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>ISession</label>
        <link refid="interface_volume_control_1_1_audio_1_1_interfaces_1_1_i_session"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>INotifyPropertyChanged</label>
      </node>
      <node id="1">
        <label>VolumeControl.Audio.AudioSession</label>
        <link refid="class_volume_control_1_1_audio_1_1_audio_session"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>IDisposable</label>
      </node>
      <node id="3">
        <label>IProcess</label>
        <link refid="interface_volume_control_1_1_audio_1_1_interfaces_1_1_i_process"/>
      </node>
      <node id="5">
        <label>INotifyPropertyChanging</label>
      </node>
    </collaborationgraph>
    <location file="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" line="16" column="18" bodyfile="X:/_Workspace/_repo/volume-control-3/VolumeControl.Audio/AudioSession.cs" bodystart="17" bodyend="202"/>
    <listofallmembers>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1a59570bbe9a8ba549280dcafb3b99a64a" prot="private" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>_controller</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1ab762b07b83ec0eb7de00ff8ed35348a0" prot="private" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>_icons</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1aeb56d8f5f6a97fde371c4795473c1f7a" prot="public" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>AudioSession</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1a13f918b85f4b1281f9e5ecb5fb7d5583" prot="public" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>Dispose</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1a59a3626b8a1cde96c65a68b65d5182da" prot="public" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>GetProcess</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1a1cdcccdbeab9a8364824211253903328" prot="public" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>Icon</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1ae18e0e01b019d4047c8bbe12f5244504" prot="public" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>IconPath</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1a5e5a1d15e9e33d0ef5b2c042ba75a9d6" prot="private" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>ImageSource?</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1a6b2e52691965a8840591964da0bb8295" prot="public" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>int</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1a51d7fa029652f8b3bc08a502f5b540e9" prot="public" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>IsRunning</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1aefdede45b3e8f48fdb89b70dcc2c1159" prot="public" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>LargeIcon</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1a0352c733c7ac9f3b1631bfeccd7f8ec0" prot="public" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>Muted</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1a9cf56bbb3fb96a826b38c5d5a94168ed" prot="public" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>NativeVolume</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1a844834f762a3d32c18360f9419049d86" prot="private" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>NotifyPropertyChanged</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1a1d04c4d5c487727c12dabeb00006a89c" prot="private" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>NotifyPropertyChanging</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1ae75d862eb45d1d2d739e1af5bd8d63c3" prot="private" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>ParseProcessIdentifier</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1a569d4fb917a60bc03f8861e8f9cb0fc7" prot="public" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>PID</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1a356c261a4c345fc0c739c5e66e4e66ea" prot="public" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>ProcessIdentifier</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1a30cfd4a7b3a77615294787e6c3cb2c35" prot="public" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>ProcessName</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1a634d0a5e08d141e120a1c3990faef6d7" prot="public" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>PropertyChanged</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1a1c6d4d4ccf66a058b4f89a833c7e33c4" prot="public" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>PropertyChanging</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1ae72ec6880a2eb08bd8d6a00824713199" prot="public" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>SmallIcon</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1a7d0a0803254aee7bce75cb6df2307c2b" prot="public" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>State</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1a961f3e23e0ad0db762c1884a91b4aef5" prot="public" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>Volume</name></member>
      <member refid="class_volume_control_1_1_audio_1_1_audio_session_1a47b4dac491e85bfa34b16d876b9774d2" prot="public" virt="non-virtual"><scope>VolumeControl::Audio::AudioSession</scope><name>VolumeController</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
