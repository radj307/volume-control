name: Generate Release

on:
  push:
    tags: '*.*.*'
  workflow_dispatch:
    inputs:
      tag:
        required: true
        type:     string

jobs:
  generate-release:
    runs-on: windows-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth:  0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        
    - name: Setup Dotnet
      uses: actions/setup-dotnet@main
      
    - name: Publish VolumeControl Release to Directory
      run:  dotnet publish VolumeControl -c Release /p:PublishProfile="VolumeControl/Properties/PublishProfiles/FolderProfile.pubxml"
      
    - name: Publish VolumeControlCLI Release to Directory
      run:  dotnet publish VolumeControlCLI -c Release /p:PublishProfile="VolumeControlCLI/Properties/PublishProfiles/FolderProfile.pubxml"
      
    - name:   Get Release Tag
      id:     get_version
      run:    |
              $TAG=${GITHUB_REF/refs\/tags\//}
              $TAG=$(if("$TAG" -eq "") { echo "${{github.event.inputs.tag}}" } else { echo $TAG })
              echo ::set-output name=TAG::"$TAG"
      shell:  powershell
      
    - name:   Stage Files
      run:    |
              mkdir STAGING
              mv "publish/VolumeControl*/*.dll" ./STAGING/
              mv "publish/VolumeControl*/*.exe" ./STAGING/
              cd STAGING
              Compress-Archive ./* "VolumeControl-${{steps.get_version.outputs.TAG}}.zip"
              
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        draft:                    true
        prerelease:               false
        tag_name:                 ${{ steps.get_version.outputs.VERSION }}
        name:                     ${{ steps.get_version.outputs.NAME }}
        generate_release_notes:   true
        fail_on_unmatched_files:  true
        files:                    ./*.zip
