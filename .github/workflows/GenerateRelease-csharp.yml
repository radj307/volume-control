name: Generate Release

# Trigger on SEMVER-format tag push event
on:
  push:
    tags: '*.*.*'
  workflow_dispatch:

# Configuration Type
env:
  BUILD_TYPE: 'Release'
  
jobs:
  build-release:
    runs-on: windows-2022
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth:  0
    - uses: actions/setup-dotnet@main
      with:
        dotnet-version: 6.0.x
      
    - name: 'Run SetVersion Script'
      run:  |
            cd ${{github.workspace}}
            './SetVersion.ps1'
      
    - name: 'Build VolumeControl Binary'
      run:  dotnet publish VolumeControl -c ${{env.BUILD_TYPE}} /p:PublishProfile="VolumeControl/Properties/PublishProfiles/FolderProfile.pubxml"
      
    - name: 'Build VersionControlCLI Binary'
      run:  dotnet publish VolumeControlCLI -c ${{env.BUILD_TYPE}} /p:PublishProfile="VolumeControlCLI/Properties/PublishProfiles/FolderProfile.pubxml"
                    
    - name:   Get Version Number
      id:     get_version
      run:    |
              cd ${{github.workspace}}
              $TAG=$(git describe --tags --abbrev=0)
              echo ::set-output name=VERSION::$TAG
              if ("$TAG" -like "*pr*") { echo ::set-output name=PRERELEASE::true } else { echo ::set-output name=PRERELEASE::false }
      shell:  powershell
              
              
    - name:   Create Staging Workspace
      run:    |
              mkdir "${{github.workspace}}/STAGING"
              
    - name:   Stage Files
      run:    |
              cd "${{github.workspace}}/STAGING"
              foreach($file in $((dir "${{github.workspace}}/publish" -recurse | where {$_.extension -in ".exe",".dll"}).Fullname)){ mv $file ./ }
              Get-ChildItem -Recurse
              
    - name:   Create Pre-Release Archive
      if:     ${{ steps.get_version.outputs.PRERELEASE == true }}
      run:    Compress-Archive '${{github.workspace}}/STAGING/*' "VolumeControl-${{ steps.get_version.outputs.TAG }}.zip"
                            
    - name:   Create Release Archive
      if:     ${{ steps.get_version.outputs.PRERELEASE != true }}
      run:    Compress-Archive '${{github.workspace}}/STAGING/*' 'VolumeControl-${{ steps.get_version.outputs.TAG }}-PreRelease.zip'
          
    - run:    |
              cd '${{github.workspace}}/STAGING'
              Get-ChildItem -Recurse
          
    - name:   'Upload Build Artifact'
      uses:   actions/upload-artifact@v2
      with:
        name: build-windows
        if-no-files-found: error
        path: './*.zip'
        
    - name: 'Create Release'
      uses: softprops/action-gh-release@v1
      with:
        draft:      true
        prerelease: ${{steps.get_version.outputs.PRERELEASE}}
        tag_name:   ${{steps.get_version.outputs.VERSION}}
        fail_on_unmatched_files: true
        files:      |
                    './*.zip'
